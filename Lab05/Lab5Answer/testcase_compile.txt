initial mem[16] = 2
All registers initial = 0

# 1~6 Basic testcase
1.
addi x1, x0,50
4 nop
addi x2, x0, 18
4 nop
sub  x3, x1, x2
4 nop
add x4, x1, x3
4 nop
or    x5, x1, x4
4 nop
and x6, x2, x4 
4 nop

result:
x1 = 50; x2 = 18; x3 = 32; 
x4 = 82; x5 = 114; x6 = 18;

2.
addi  x1, x0, 23 
addi  x2, x0, 13
addi  x3, x0, 16 
addi x0,x0,0
addi x0,x0,0
or      x4, x2, x3
sub   x5, x1, x2 
add   x6, x1, x5 
addi x0,x0,0
or     x7, x3, x5
addi x0,x0,0
addi x0,x0,0
and   x8, x7, x2
addi x0,x0,0
addi x0,x0,0
xor   x9, x6, x8

result:
x1 = 23; x2 = 13; x3 = 16; 
x4 = 29; x5 = 10; x6 = 33;  
x7 = 26; x8 = 8; x9 = 41; 

3.
addi x2,x2,60
addi x0,x0,0
addi x0,x0,0
sw x2,0(x0)

result:
0(mem) = 60, x2 = 60

4.
addi x1,x1,40
addi x2,x2,50
addi x0,x0,0
addi x0,x0,0
slt x3,x1,x2

result :
x1 = 40, x2= 50, x3 =1

5.
addi x3,x1,1    
addi x0,x0,0
addi x0,x0,0
lw x1,16(x2)   

result:
x1 = 2,x3 = 1

6.
slti x1,x1,40
addi x2,x2,5

result:
x1 = 1,x2=5

# 7 ~ 10 Medium testcase
7.
addi  x1, x0, 23 
addi  x2, x0, 13
addi  x3, x0, 16 
or      x4, x2, x3
sub   x5, x1, x2 
add   x6, x1, x5 
or     x7, x3, x5
and   x8, x7, x2
xor   x9, x6, x8

result:
x1 = 23; x2 = 13; x3 = 16; 
x4 = 29; x5 = 10; x6 = 33;  
x7 = 26; x8 = 8; x9 = 41; 

8. 
addi x2,x2,6
addi x0,x0,0
slli x2,x2,1

result:
x2 = 12

9. 
addi x1,x1,40
addi x2,x2,50
slt x3,x1,x2

result :
x1 = 40, x2= 50, x3 =1

10. 
addi x1,x0,5
addi x1,x0,6
addi x2,x1,4

result :
 x1 = 6,x2 = 10

# 11 ~ 13 Advanced testcase
11.
lw x1,16(x2)   
add x3,x2,x1    

result:
x1 = 2,x3 = 2

12.
beq x1,x1,b_label
addi x4,x4,5
b_label: addi x3,x3,5

result:
x3 = 5

13. 
jal x1,j_label
addi x4 , x4,5
j_label:addi x3,x3,5

result:
x1 = 4,x3=5



